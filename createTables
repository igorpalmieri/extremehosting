CREATE TABLE Users (
    id int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    name varchar(255) NOT NULL,
    password varchar(255) NOT NULL,
    profileUrl varchar(255) NOT NULL,
    username varchar(255) NOT NULL,
    city varchar(255),
    country varchar(255),
    sport int DEFAULT 1,
    fotoPath varchar(255),
    available int DEFAULT 0,
    howMany int DEFAULT 0,
    PRIMARY KEY (id)
);

CREATE TABLE Stays (
    id int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
    hostId int NOT NULL,
    guestId int NOT NULL,
    startDt timestamp NOT NULL,
    endDt timestamp NOT NULL,
    num int DEFAULT 0,
    numSport int DEFAULT 1,
    status int DEFAULT 1,
    created timestamp DEFAULT current_timestamp,
    modified timestamp,
    PRIMARY KEY (id),
    FOREIGN KEY (hostId) REFERENCES Users(id),
    FOREIGN KEY (guestId) REFERENCES Users(id)
);

 CREATE TABLE Rates (
	id int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	senderId int NOT NULL,
	receiverId int NOT NULL,
	stayId int,
	type int NOT NULL,
	value int DEFAULT 0,
	description varchar(255),
	created timestamp DEFAULT current_timestamp,
    modified timestamp,
	PRIMARY KEY (id),
    FOREIGN KEY (senderId) REFERENCES Users(id),
	FOREIGN KEY (receiverId) REFERENCES Users(id),
    FOREIGN KEY (stayId) REFERENCES Stays(id)
 );
 
 CREATE TABLE Trips (
	id int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	hostId int NOT NULL,
	place varchar(255) NOT NULL,
	description varchar(255) NOT NULL,
	startDt timestamp NOT NULL,
    endDt timestamp NOT NULL,
	cost int DEFAULT 0,
	created timestamp DEFAULT current_timestamp,
    modified timestamp,
	PRIMARY KEY (id),
    FOREIGN KEY (hostId) REFERENCES Users(id)
 );
 
 CREATE TABLE TripMembers (
	id int NOT NULL GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1),
	tripId int NOT NULL,
	userId int NOT NULL,
	cancelled int DEFAULT 0,
	created timestamp DEFAULT current_timestamp,
    modified timestamp,
	PRIMARY KEY (id),
    FOREIGN KEY (tripId) REFERENCES Trips(id),
	FOREIGN KEY (userId) REFERENCES Users(id)
 );
